{"ast":null,"code":"var _jsxFileName = \"D:\\\\html\\\\lerning-web\\\\lesson-5\\\\visa\\\\src\\\\Components\\\\SignUpComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import PropTypes from 'prop-types'\n\nimport { Alert, Button, Col, Form, FormLabel, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpComponent(props) {\n  _s();\n\n  const {\n    title,\n    btnText,\n    inputText,\n    inputT,\n    isRemember\n  } = props;\n  const [isValid, setIsValid] = useState({});\n  const [emailVal, setEmailVal] = useState('');\n  const [pwdVal, setPwdVal] = useState('');\n  const result = {\n    emailVal: 'test@test.com',\n    pwdVal: '123456'\n  };\n\n  const handelEmail = e => {\n    setEmailVal(e.currentTarget.value);\n  };\n\n  const handelPwd = e => {\n    setPwdVal(e.currentTarget.value);\n  };\n\n  const handelSubmit = () => {\n    if (result.emailVal === emailVal && result.pwdVal === pwdVal) {\n      setIsValid({\n        error: false,\n        success: true,\n        msg: 'Login Success'\n      });\n    } else {\n      setIsValid({\n        error: true,\n        success: false,\n        msg: 'Invalid User name or password'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-Box text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-logo\",\n      children: \"SIGN UP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [isValid.success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: isValid.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), isValid.error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: isValid.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Name\",\n              placeholder: \"Enter Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridSurName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"surname\",\n              placeholder: \"Enter Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridMobileNumber\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: handelEmail,\n            placeholder: \"Enter Mobile number or email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: handelPwd,\n            type: \"password\",\n            placeholder: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"dob\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"dob\",\n            placeholder: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handelSubmit,\n          variant: \"success\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpComponent, \"3hj/2MwspFtncQUaiPI/cLvE5JI=\");\n\n_c = SignUpComponent;\nSignUpComponent.propTypes = {};\nexport default SignUpComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpComponent\");","map":{"version":3,"sources":["D:/html/lerning-web/lesson-5/visa/src/Components/SignUpComponent.jsx"],"names":["React","useState","Alert","Button","Col","Form","FormLabel","Row","SignUpComponent","props","title","btnText","inputText","inputT","isRemember","isValid","setIsValid","emailVal","setEmailVal","pwdVal","setPwdVal","result","handelEmail","e","currentTarget","value","handelPwd","handelSubmit","error","success","msg","propTypes"],"mappings":"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","sourcesContent":["import React ,{ useState } from 'react';\r\n// import PropTypes from 'prop-types'\r\nimport { Alert, Button, Col, Form, FormLabel, Row } from 'react-bootstrap'\r\n\r\nfunction SignUpComponent(props) {\r\n    const {title,btnText,inputText,inputT,isRemember}=props;\r\n    const [isValid, setIsValid] = useState({});\r\n    const [emailVal, setEmailVal] = useState('');\r\n    const [pwdVal, setPwdVal] = useState('');\r\n    const result = {emailVal:'test@test.com',pwdVal:'123456'}\r\n    const handelEmail = (e)=>{\r\n      setEmailVal(e.currentTarget.value)\r\n    }\r\n    const handelPwd = (e)=>{\r\n      setPwdVal(e.currentTarget.value)\r\n    }\r\n    const handelSubmit =()=>{\r\n     if(result.emailVal === emailVal && result.pwdVal === pwdVal) {\r\n        setIsValid({error:false,success:true,msg:'Login Success'})\r\n     }\r\n     else{\r\n       setIsValid({error:true,success:false,msg:'Invalid User name or password'})\r\n     }\r\n    }\r\n    return (\r\n        <div className=\"Login-Box text-center\">\r\n          <div className=\"Login-logo\">SIGN UP</div>\r\n          <div className=\"form-container\">\r\n                {\r\n                        isValid.success &&\r\n                        <Alert variant='success'>\r\n                        {isValid.msg}\r\n                        </Alert>\r\n                        }\r\n                        {\r\n                        isValid.error &&\r\n                        <Alert variant='danger'>\r\n                        {isValid.msg}\r\n                        </Alert>\r\n                }\r\n                <p>{title}</p>\r\n                {/* <p>{emailVal}</p>\r\n                <p>{pwdVal}</p> */}\r\n\r\n             <Form>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridName\">\r\n                    <Form.Label></Form.Label>\r\n                    <Form.Control type=\"Name\" placeholder=\"Enter Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridSurName\">\r\n                    <Form.Label></Form.Label>\r\n                    <Form.Control type=\"surname\" placeholder=\"Enter Surname\" />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formGridMobileNumber\">\r\n                    <Form.Label></Form.Label>\r\n                    <Form.Control onChange={handelEmail} placeholder=\"Enter Mobile number or email address\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridPassword\">\r\n                    <Form.Label></Form.Label>\r\n                    <Form.Control onChange={handelPwd} type = \"password\" placeholder=\"Enter New Password\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"dob\">\r\n                            <Form.Label> Date of Birth</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" />\r\n                 </Form.Group>\r\n\r\n              \r\n                <Button onClick={handelSubmit} variant=\"success\"\r\n                >Sign Up\r\n                </Button>\r\n                </Form>\r\n                        \r\n                    \r\n               \r\n            </div>\r\n        </div>\r\n                    )\r\n}\r\n\r\nSignUpComponent.propTypes = {\r\n\r\n}\r\n\r\nexport default SignUpComponent"]},"metadata":{},"sourceType":"module"}