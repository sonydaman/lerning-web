{"ast":null,"code":"var _jsxFileName = \"D:\\\\html\\\\lerning-web\\\\lesson-5\\\\visa\\\\src\\\\Examples\\\\ExampleForUseState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExampleForUseState = props => {\n  _s();\n\n  const [table, setTable] = useState(5);\n\n  const handelTableName = e => {\n    setTable(e.currentTarget.value);\n  };\n\n  const renderTable = () => {\n    const isNumber = Number(table);\n    console.log(isNumber);\n\n    if (isNumber !== NaN) {\n      var res = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; // res.length = table;\n      // let index = 0;\n      // for(index = 0; index < table; index++) {\n      //              res.push( <div key={index}>{table} * {item} = {(item) * (table)}</div>)\n      //             // res.push(index)\n      //        }\n      // return res;\n      // console.log(res)\n\n      return res.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [table, \" * \", item, \" = \", item * table, \"   \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 24\n        }, this);\n      }); // console.log(res);\n      // return  \"HI\";\n    } else {\n      return \"Kindly enter a number\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Table of \", table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), \"Add your table \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handelTableName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this), table && renderTable()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExampleForUseState, \"LM/pDQhBsaidTkhT2XgSC9iu4eA=\");\n\n_c = ExampleForUseState;\nExampleForUseState.propTypes = {};\nexport default ExampleForUseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExampleForUseState\");","map":{"version":3,"sources":["D:/html/lerning-web/lesson-5/visa/src/Examples/ExampleForUseState.jsx"],"names":["React","useState","PropTypes","ExampleForUseState","props","table","setTable","handelTableName","e","currentTarget","value","renderTable","isNumber","Number","console","log","NaN","res","map","item","index","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMM,eAAe,GAAIC,CAAD,IAAM;AACzBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACJ,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAI;AACpB,UAAMC,QAAQ,GAAGC,MAAM,CAACR,KAAD,CAAvB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAGA,QAAQ,KAAKI,GAAhB,EAAoB;AAChB,UAAIC,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAAV,CADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAOA,GAAG,CAACC,GAAJ,CAAQ,CAACC,IAAD,EAAMC,KAAN,KAAc;AACzB,4BAAO;AAAA,qBAAkBf,KAAlB,SAA4Bc,IAA5B,SAAsCA,IAAD,GAAUd,KAA/C;AAAA,WAAUe,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFM,CAAP,CAVgB,CAahB;AACA;AACH,KAfD,MAgBK;AACD,aAAO,uBAAP;AACH;AAEJ,GAvBD;;AAwBA,sBACI;AAAA,4BACG;AAAA,8BAAcf,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,kCAEkB;AAAO,MAAA,QAAQ,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGIF,KAAK,IAAIM,WAAW,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApCD;;GAAMR,kB;;KAAAA,kB;AAsCNA,kBAAkB,CAACkB,SAAnB,GAA+B,EAA/B;AAIA,eAAelB,kBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ExampleForUseState = props => {\r\n    const [table, setTable] = useState(5)\r\n    const handelTableName = (e) =>{\r\n         setTable(e.currentTarget.value)\r\n    }\r\n    const renderTable = ()=>{\r\n        const isNumber = Number(table);\r\n        console.log(isNumber)\r\n        if(isNumber !== NaN){\r\n            var res = [1,2,3,4,5,6,7,8,9,10];\r\n            // res.length = table;\r\n            // let index = 0;\r\n            // for(index = 0; index < table; index++) {\r\n            //              res.push( <div key={index}>{table} * {item} = {(item) * (table)}</div>)\r\n            //             // res.push(index)\r\n            //        }\r\n            // return res;\r\n            // console.log(res)\r\n            return res.map((item,index)=>{\r\n                return <div key={index}>{table} * {item} = {(item) * (table)}   </div>\r\n            })\r\n            // console.log(res);\r\n            // return  \"HI\";\r\n        }\r\n        else {\r\n            return \"Kindly enter a number\";\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n           <h1>Table of {table}</h1>\r\n           Add your table <input onChange={handelTableName} />\r\n           {table && renderTable()}\r\n        </div>\r\n    )\r\n}\r\n\r\nExampleForUseState.propTypes = {\r\n\r\n}\r\n\r\nexport default ExampleForUseState\r\n"]},"metadata":{},"sourceType":"module"}